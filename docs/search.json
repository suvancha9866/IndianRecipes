[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Indian Recipes",
    "section": "",
    "text": "This is an examination of an Indian Food Dataset containing dishes from various states and regions of India.\nI chose this dataset because I am Indian American and love looking at food. I thought it would be interesting to analyze the regions and states of India and how their food differentiates and varies. This was also a really lovely, laid-out dataset with flavor profiles and course types.\nI found this dataset by searching food on Kaggle. It caught my eye, and I wanted to analyze it. This is the indian_food.csv dataset.\n\nindia &lt;- read.csv(\"indian_food.csv\")\nordered &lt;- india |&gt; \n  arrange(name)\nknitr::kable(head(ordered), format=\"html\")\n\n\n\n\nname\ningredients\ndiet\nprep_time\ncook_time\nflavor_profile\ncourse\nstate\nregion\n\n\n\n\nAdhirasam\nRice flour, jaggery, ghee, vegetable oil, elachi\nvegetarian\n10\n50\nsweet\ndessert\nWest Bengal\nEast\n\n\nAloo gobi\nCauliflower, potato, garam masala, turmeric, curry leaves\nvegetarian\n10\n20\nspicy\nmain course\nPunjab\nNorth\n\n\nAloo matar\nPotato, peas, chillies, ginger, garam masala, garlic\nvegetarian\n5\n40\nspicy\nmain course\nPunjab\nNorth\n\n\nAloo methi\nPotato, fenugreek leaves, chillies, salt, oil\nvegetarian\n10\n40\nbitter\nmain course\nPunjab\nNorth\n\n\nAloo shimla mirch\nPotato, shimla mirch, garam masala, amchur powder, salt\nvegetarian\n10\n40\nspicy\nmain course\nPunjab\nNorth\n\n\nAloo tikki\nRice flour, potato, bread crumbs, garam masala, salt\nvegetarian\n5\n20\nspicy\nmain course\nPunjab\nNorth\n\n\n\n\n\n\n\nThe Indian Food dataset we are working with has 225 food entries and 9 columns of characteristics.\nThroughout this analysis, we will break down many columns to see similarities and differences between the regions and states.\nDisclaimer: Food is very various and infinite. This is not a comprehensive list of Indian Food by any means, so we are doing a surface-level analysis. Anything discovered here is taken with a grain of salt because the sample size for everything is not greater than 10% of the population."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hello! My name is Suvan Chatakondu, and I am a student at the University of Illinois at Urbana-Champaign, where I study Statistics and Computer Science."
  },
  {
    "objectID": "index.html#section-1-dataset",
    "href": "index.html#section-1-dataset",
    "title": "Indian Recipes",
    "section": "",
    "text": "This is an examination of an Indian Food Dataset containing dishes from various states and regions of India.\nI chose this dataset because I am Indian American and love looking at food. I thought it would be interesting to analyze the regions and states of India and how their food differentiates and varies. This was also a really lovely, laid-out dataset with flavor profiles and course types.\nI found this dataset by searching food on Kaggle. It caught my eye, and I wanted to analyze it. This is the indian_food.csv dataset.\n\nindia &lt;- read.csv(\"indian_food.csv\")\nordered &lt;- india |&gt; \n  arrange(name)\nknitr::kable(head(ordered), format=\"html\")\n\n\n\n\nname\ningredients\ndiet\nprep_time\ncook_time\nflavor_profile\ncourse\nstate\nregion\n\n\n\n\nAdhirasam\nRice flour, jaggery, ghee, vegetable oil, elachi\nvegetarian\n10\n50\nsweet\ndessert\nWest Bengal\nEast\n\n\nAloo gobi\nCauliflower, potato, garam masala, turmeric, curry leaves\nvegetarian\n10\n20\nspicy\nmain course\nPunjab\nNorth\n\n\nAloo matar\nPotato, peas, chillies, ginger, garam masala, garlic\nvegetarian\n5\n40\nspicy\nmain course\nPunjab\nNorth\n\n\nAloo methi\nPotato, fenugreek leaves, chillies, salt, oil\nvegetarian\n10\n40\nbitter\nmain course\nPunjab\nNorth\n\n\nAloo shimla mirch\nPotato, shimla mirch, garam masala, amchur powder, salt\nvegetarian\n10\n40\nspicy\nmain course\nPunjab\nNorth\n\n\nAloo tikki\nRice flour, potato, bread crumbs, garam masala, salt\nvegetarian\n5\n20\nspicy\nmain course\nPunjab\nNorth\n\n\n\n\n\n\n\nThe Indian Food dataset we are working with has 225 food entries and 9 columns of characteristics.\nThroughout this analysis, we will break down many columns to see similarities and differences between the regions and states.\nDisclaimer: Food is very various and infinite. This is not a comprehensive list of Indian Food by any means, so we are doing a surface-level analysis. Anything discovered here is taken with a grain of salt because the sample size for everything is not greater than 10% of the population."
  },
  {
    "objectID": "index.html#section-2-exploratory-data-analysis",
    "href": "index.html#section-2-exploratory-data-analysis",
    "title": "Indian Recipes",
    "section": "Section 2: Exploratory Data Analysis",
    "text": "Section 2: Exploratory Data Analysis\nLet’s examine this data. I want to do this by looking at graphs, which I can use to answer many questions.\n\n1. What is the distribution of dishes from each state? What about each region?\n\nstates &lt;- india |&gt; \n  group_by(state) |&gt; \n  summarize(n = n()) |&gt; \n  mutate(state = ifelse(state == \"-1\", \"Other\", \n                        state)\n         ) |&gt; \n  arrange(state) |&gt; \n  rename(count = n)\n\n\nstate_graph &lt;- ggplot(states, \n                      mapping = aes(x=state,\n                                    y=count,\n                                    fill=state,\n                                    text = paste(\"State: \", state, \"\\n\",\n                                                 \"Count: \", count, sep=\"\"))) +\n  geom_col() +\n  labs(title = \"Number of Dishes per State in Dataset\",\n       x = \"State\",\n       y = \"Number of Dishes\") +\n  theme_wsj() +\n  theme(\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15),\n        axis.text.y = element_text(size = 10, \n                                   family = \"serif\"),\n        axis.text.x = element_text(angle = 80,\n                                   size = 10,\n                                   hjust = .9,\n                                   color = \"black\",\n                                   family = \"serif\"\n                                   ),\n        axis.line.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        plot.title = element_text(hjust = .5, \n                                  size=20),\n        legend.position = \"none\"\n        )\n\n\nggplotly(state_graph, tooltip = \"text\")\n\n\n\n\n\nIt is apparent that some states are very overrepresented in this dataset, like Gujurat, Punjab, and Maharashtra. Some states do not have that many dishes in this dataset, like Tripura, Chhattisgarh, and Nagaland. With this knowledge, any analysis that we do that includes the states will not be accurate because not every state is represented equally. But that doesn’t stop us from exploring this dataset.\n\nregions &lt;- india |&gt; \n  group_by(region) |&gt; \n  summarize(n = n()) |&gt; \n  mutate(region = ifelse(region == \"-1\", \"Other\", \n                         region\n                       )\n         ) |&gt; \n  arrange(region) |&gt; \n  rename(count = n)\n\n\nregion_graph &lt;- ggplot(regions, \n                       mapping = aes(x=region,\n                                     y=count,\n                                     fill=region,\n                                     text = paste(\"Region: \", region, \"\\n\",\n                                                  \"Count: \", count, sep=\"\"))) +\n  geom_col() +\n  labs(title = \"Number of Dishes per Region in Dataset\",\n       x = \"Region\",\n       y = \"Number of Dishes\") +\n  theme_wsj() +\n  theme(\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15),\n        axis.text.y = element_text(size = 15,\n                                   family = \"serif\"),\n        axis.text.x = element_text(angle = 80,\n                                   size = 15,\n                                   hjust = .5,\n                                   color = \"black\",\n                                   family = \"serif\"\n                                   ),\n        axis.line.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        plot.title = element_text(hjust = .5, \n                                  size=20),\n        legend.position = \"none\"\n        )\n\n\nggplotly(region_graph, tooltip = \"text\")\n\n\n\n\n\nThis is also not a uniform distribution as West and South dominate North East and Central India. But that will not stop me from looking at this dataset more.\n\n\n2. How many different Flavor Profiles/Courses are there in this dataset?\n\nflavor_profiles &lt;- india |&gt; \n  group_by(flavor_profile) |&gt; \n  summarize(n = n()) |&gt; \n  arrange(flavor_profile) |&gt; \n  rename(count = n)\n\n\nflavor_profiles_graph &lt;- ggplot(flavor_profiles, \n                                mapping = aes(x=flavor_profile,\n                                              y=count,\n                                              fill=flavor_profile,\n                                              text = paste(\"Flavor Profile: \", flavor_profile, \"\\n\",\n                                                           \"Count: \", count, sep=\"\"))) +\n  geom_col() +\n  labs(title = \"Number of Dishes per Flavor Profile in Dataset\",\n       x = \"Flavor Profiles\",\n       y = \"Number of Dishes\") +\n  theme_wsj() +\n  theme(\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15),\n        axis.text.y = element_text(size = 15,\n                                   family=\"serif\"),\n        axis.text.x = element_text(size = 15,\n                                   family=\"serif\"),\n        plot.title = element_text(hjust = .5, \n                                  size=20),\n        legend.position = \"none\"\n        ) + coord_flip() + \n  scale_x_discrete(breaks=c(\"sweet\",\"spicy\",\"sour\", \"savory\", \"bitter\"),\n                   labels=c(\"Sweet\", \"Spicy\", \"Sour\", \"Savory\", \"Bitter\"))\n\n\nggplotly(flavor_profiles_graph, tooltip = \"text\")\n\n\n\n\n\nWe can see that there is a lot of Spicy foods listed with Sweet foods following closely. However, we do not have a lot of Sour, Bitter, or Savory foods compared to the other two flavor profiles.\n\ncourses &lt;- india |&gt; \n  group_by(course) |&gt; \n  summarize(n = n()) |&gt; \n  arrange(course) |&gt; \n  rename(count = n)\n\n\ncourses_graph &lt;- ggplot(courses, \n                        mapping = aes(x=course,\n                                      y=count,\n                                      fill=course,\n                                      text = paste(\"Course: \", course, \"\\n\",\n                                                   \"Count: \", count, sep=\"\"))) +\n  geom_col() +\n  labs(title = \"Number of Dishes per Course in Dataset\",\n       x = \"Course\",\n       y = \"Number of Dishes\") +\n  theme_wsj() +\n  theme(\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15),\n        axis.text.y = element_text(size = 15,\n                                   family = \"serif\"),\n        axis.text.x = element_text(size = 15,\n                                   family = \"serif\"),\n        plot.title = element_text(hjust = .5, \n                                  size=20),\n        legend.position = \"none\",\n        axis.ticks.y = element_blank()\n        ) + coord_flip() + \n  scale_x_discrete(breaks=c(\"starter\",\"snack\",\"main course\", \"dessert\"),\n                   labels=c(\"Starter\", \"Snack\", \"Main Course\", \"Dessert\"))\n\n\nggplotly(courses_graph, tooltip = \"text\")\n\n\n\n\n\nThis is also a pretty uneven split amongst the different Courses. Just keep this as food for though.\n\n\n3. What percent of the food in this dataset are vegetarian/non-vegetarian?\n\ndiets &lt;- india |&gt; \n  group_by(diet) |&gt; \n  summarize(n = n()) |&gt; \n  arrange(diet) |&gt; \n  rename(count = n)\n\n\ndiets_graph &lt;- ggplot(diets,\n                      mapping = aes(x=\"\",\n                                    y=diet,\n                                    fill=diet)) +\n  geom_bar(stat=\"identity\", width=1) +\n  coord_polar(\"y\", start=0) +\n  theme_void()  +\n  labs(\n    title = \"Number of Dishes that are Veg/Non-Veg in Dataset\",\n    fill = \"Diet\"\n  ) +\n  theme(\n    text = element_text(family = \"serif\",\n                            color = \"black\"),\n    plot.title = element_text(size=20, \n                              hjust=.5)\n  ) +\n  scale_fill_manual(values=c(\"#fc8d62\", \"#66c2a5\"), name = \"Diet\", labels = c(\"Non-Vegetarian\", \"Vegetarian\"))\ndiets_graph\n\n\n\n\nWell this is certainly very un-even. However, if you remember, North and West India dominate this dataset, and those are usually more vegetarian due to religious reasons.\nNow that we have examined all five characteristics of this dataset and found that they are not uniformly distributed, all of our further answering and analysis will be contained within this dataset. This will make sense as we proceed with this analysis."
  },
  {
    "objectID": "index.html#section-3-exploratory-data-visualizations",
    "href": "index.html#section-3-exploratory-data-visualizations",
    "title": "Indian Recipes",
    "section": "Section 3: Exploratory Data Visualizations",
    "text": "Section 3: Exploratory Data Visualizations\nNow let’s answer some more interesting questions🤭!\n\n4. Does Prep-Time and Cook-Time ratio influence what type of Flavor Profile it creates? What about influencing what Course it creates?\n\nratio1_graph1 &lt;- india |&gt; \n  ggplot(aes(x=prep_time, \n             y=cook_time, \n             col=flavor_profile, \n             text = paste(\"Dish: \", name, \"\\n\",\n                          \"Flavor Profile: \", flavor_profile, \"\\n\",\n                          \"Prep Time: \", prep_time, \" mins\\n\",\n                          \"Cook Time: \", cook_time, \" mins\\n\", sep=\"\"))) +\n  geom_jitter(width = .5, height = .5) +\n  labs(title = \"Flavor Profiles wrt Prep & Cook Time\",\n       x = \"Prep Time\",\n       y = \"Cook Time\",\n       col = \"Flavor Profile\") +\n  theme(text = element_text(family = \"serif\",\n                            color = \"black\"),\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15), \n        axis.text.y = element_text(size = 15),\n        axis.text.x = element_text(size = 15),\n        plot.title = element_text(hjust = .5, \n                                  size=20),\n        legend.title = element_text(size = 15)\n        )\nggplotly(ratio1_graph1, tooltip = \"text\")\n\n\n\n\n\n\nAlright. We have some massive outliers here. We can just be satisfied with this graph. Or we can filter out some of the more expansive prep and cook times. Let’s do this with some boxplots to decide the boundaries.\n\nratio1_graph2 &lt;- india |&gt; \n  filter(prep_time &gt;= 0) |&gt; \n  ggplot(aes(x=prep_time)) +\n  geom_boxplot() + \n  labs(title = \"Prep-Time Boxplot\",\n       x = \"Prep Time\") +\n  theme_wsj() +\n  theme(text = element_text(family = \"serif\",\n                            color = \"black\"),\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.text.x = element_text(size = 15),\n        plot.title = element_text(hjust = .5, \n                                  size=20)\n        ) +\n  ylim(-1, 1)\nratio1_graph2\n\n\n\n\nGoodness, there’s a lot of outlier in prep-time, lets lock it down to minutes in the data that aren’t outliers.\n\n\n\n\n\nxmin\nxlower\nxmiddle\nxupper\nxmax\n\n\n\n\n5\n10\n10\n20\n35\n\n\n\n\n\nLet’s do the same for Cook Time.\n\nratio1_graph3 &lt;- india |&gt; \n  filter(cook_time &gt;= 0) |&gt; \n  ggplot(aes(x=cook_time)) +\n  geom_boxplot() + \n  labs(title = \"Cook-Time Boxplot\",\n       x = \"Cook Time\") +\n  theme_wsj() +\n  theme(text = element_text(family = \"serif\",\n                            color = \"black\"),\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.text.x = element_text(size = 15),\n        plot.title = element_text(hjust = .5, \n                                  size=20)\n        ) +\n  ylim(-1, 1)\nratio1_graph3\n\n\n\n\n\n\n\n\n\nxmin\nxlower\nxmiddle\nxupper\nxmax\n\n\n\n\n2\n20\n30\n45\n75\n\n\n\n\n\nBet. Now we have the numbers. Lets redo the plot!\n\nratio1_graph4 &lt;- india |&gt; \n  filter(prep_time &gt;= 0 & prep_time &lt;= 35 & cook_time &gt;= 0 & cook_time &lt;= 75) |&gt; \n  ggplot(aes(x=prep_time, \n             y=cook_time, \n             col=flavor_profile,\n             label = name,\n             text = paste(\"Dish: \", name, \"\\n\",\n                          \"Flavor Profile: \", flavor_profile, \"\\n\",\n                          \"Prep Time: \", prep_time, \" mins\\n\",\n                          \"Cook Time: \", cook_time, \" mins\\n\", sep=\"\"))) +\n  geom_jitter(width = 0.7, height = 0.7) +\n  labs(title = \"Flavor Profiles wrt Prep & Cook Time\",\n       x = \"Prep Time\",\n       y = \"Cook Time\",\n       col = \"Flavor Profile\") +\n  theme(text = element_text(family = \"serif\",\n                            color = \"black\"),\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15), \n        axis.text.y = element_text(size = 15),\n        axis.text.x = element_text(size = 15),\n        plot.title = element_text(hjust = .5, \n                                  size=20),\n        legend.title = element_text(size = 15)\n        )\nggplotly(ratio1_graph4, tooltip = \"text\")\n\n\n\n\n\n\nThis is an interesting graph. I like it. We can see that Sweet things take a little less to prep and still take a while to cook. Spicy is a little more prep but cooking is about the same as sweets. Savory doesn’t take too long to prep or cook from what information we have in this plot. This is good stuff. We should do some mathematical analysis. But we will keep that for section 4. Lets do the same for course.\n\nratio2_graph1 &lt;- india |&gt; \n  filter(prep_time &gt;= 0 & prep_time &lt;= 35 & cook_time &gt;= 0 & cook_time &lt;= 75) |&gt;\n  ggplot(aes(x=prep_time, \n             y=cook_time, \n             col=course, \n             text = paste(\"Dish: \", name, \"\\n\",\n                          \"Course: \", course, \"\\n\",\n                          \"Prep Time: \", prep_time, \" mins\\n\",\n                          \"Cook Time: \", cook_time, \" mins\\n\", sep=\"\"))) +\n  geom_jitter(width = .5, height = .5) +\n  labs(title = \"Courses wrt Prep & Cook Time\",\n       x = \"Prep Time\",\n       y = \"Cook Time\",\n       col = \"Course\") +\n  theme(text = element_text(family = \"serif\",\n                            color = \"black\"),\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15), \n        axis.text.y = element_text(size = 15),\n        axis.text.x = element_text(size = 15),\n        plot.title = element_text(hjust = .5, \n                                  size=20),\n        legend.title = element_text(size = 15)\n        )\nggplotly(ratio2_graph1, tooltip = \"text\")\n\n\n\n\n\n\nGosh now I want numbers. These graphs are good, but I need numerical confirmation about the averages. Let’s find out some numbers.\n\nratio_table1 &lt;- india |&gt; \n  filter(prep_time &gt;= 0 & prep_time &lt;= 35 & cook_time &gt;= 0 & cook_time &lt;= 75) |&gt;\n  mutate(ratio = cook_time / prep_time) |&gt; \n  group_by(flavor_profile) |&gt; \n  summarize(CookPrepRatio = mean(ratio)) |&gt; \n  arrange(desc(CookPrepRatio)) |&gt; \n  rename(FlavorProfile = flavor_profile)\nknitr::kable(ratio_table1)\n\n\n\n\nFlavorProfile\nCookPrepRatio\n\n\n\n\nsweet\n3.230513\n\n\nbitter\n2.625000\n\n\nspicy\n2.423907\n\n\nsavory\n2.162500\n\n\nsour\n1.000000\n\n\n\n\n\nHere we can see that Sweet has more cook time per minute of prep time compared to the others. But to find out if this is significant or not would need to do some hypothesis testing.\n\nratio_table2 &lt;- india |&gt; \n  filter(prep_time &gt;= 0 & prep_time &lt;= 35 & cook_time &gt;= 0 & cook_time &lt;= 75) |&gt;\n  mutate(ratio = cook_time / prep_time) |&gt; \n  group_by(course) |&gt; \n  summarize(CookPrepRatio = mean(ratio)) |&gt; \n  arrange(desc(CookPrepRatio)) |&gt; \n  rename(Course = course)\nknitr::kable(ratio_table2)\n\n\n\n\nCourse\nCookPrepRatio\n\n\n\n\ndessert\n3.190212\n\n\nmain course\n2.505596\n\n\nsnack\n2.080357\n\n\n\n\n\nOk, I thought that desserts would take more time based on the fact that sweets were the highest Cook Prep Time Ratio. So this looks right. We would need to do some hypothesis testing to see how significantly higher the dessert ratio is. (Note: Find mean time for ratio and see if it is statistically significant using hypothesis testing)\n\n\n5. What are each region’s/state’s distribution for prep/cook time amongst all of the dishes?\nOoh interesting question indeed. Lets do the same process 😭.\n\ntime_prepped1 &lt;- india |&gt; \n  filter(state != \"-1\" & prep_time != -1) |&gt; \n  group_by(state) |&gt; \n  summarize(\n    Count = n(),\n    Average = mean(prep_time),\n    Minimum = min(prep_time),\n    Quartile1 = quantile(prep_time, probs = c(.25), type = 1),\n    Median = median(prep_time),\n    Quartile3 = quantile(prep_time, probs = c(.75), type = 1),\n    Maximum = max(prep_time)\n  ) |&gt; \n  arrange(desc(Median))\nknitr::kable(time_prepped1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstate\nCount\nAverage\nMinimum\nQuartile1\nMedian\nQuartile3\nMaximum\n\n\n\n\nManipur\n1\n240.00000\n240\n240\n240.0\n240\n240\n\n\nKarnataka\n6\n60.83333\n5\n10\n25.0\n120\n180\n\n\nJammu & Kashmir\n1\n20.00000\n20\n20\n20.0\n20\n20\n\n\nPunjab\n32\n48.75000\n5\n10\n20.0\n20\n500\n\n\nWest Bengal\n22\n49.31818\n10\n10\n17.5\n40\n480\n\n\nGoa\n2\n15.00000\n10\n10\n15.0\n20\n20\n\n\nGujarat\n32\n15.46875\n5\n10\n15.0\n20\n35\n\n\nMadhya Pradesh\n2\n15.00000\n10\n10\n15.0\n20\n20\n\n\nOdisha\n5\n18.00000\n10\n10\n15.0\n25\n30\n\n\nAndhra Pradesh\n10\n61.00000\n5\n10\n12.5\n120\n240\n\n\nRajasthan\n6\n22.83333\n10\n10\n11.0\n15\n80\n\n\nAssam\n11\n11.81818\n5\n10\n10.0\n15\n20\n\n\nBihar\n3\n21.66667\n10\n10\n10.0\n45\n45\n\n\nChhattisgarh\n1\n10.00000\n10\n10\n10.0\n10\n10\n\n\nHaryana\n1\n10.00000\n10\n10\n10.0\n10\n10\n\n\nKerala\n7\n82.14286\n5\n10\n10.0\n30\n495\n\n\nMaharashtra\n27\n17.22222\n5\n10\n10.0\n20\n70\n\n\nNCT of Delhi\n1\n10.00000\n10\n10\n10.0\n10\n10\n\n\nTamil Nadu\n17\n17.05882\n5\n10\n10.0\n10\n120\n\n\nTelangana\n5\n16.00000\n10\n10\n10.0\n20\n30\n\n\nUttar Pradesh\n9\n16.11111\n10\n10\n10.0\n20\n30\n\n\nUttarakhand\n1\n10.00000\n10\n10\n10.0\n10\n10\n\n\nNagaland\n1\n5.00000\n5\n5\n5.0\n5\n5\n\n\n\n\n\n\nindia |&gt; \n  filter(state != \"-1\" & prep_time != -1) |&gt; \n  ggplot(aes(x = prep_time, y = state)) +\n  geom_boxplot() + \n  labs(title = \"Prep Time by State\",\n       x = \"Prep Time\",\n       y = \"State\") +\n  theme_wsj() +\n  theme(text = element_text(family = \"serif\",\n                            color = \"black\"),\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15),\n        axis.text.y = element_text(size = 8),\n        axis.text.x = element_text(size = 15),\n        plot.title = element_text(hjust = .5, \n                                  size=20)\n        )\n\n\n\n\nI ordered this list by the highest median. There are a lot of outliers in this dataset so we have to use the neutral party that isn’t affected by outliers is the median. But the sample size isn’t the same between all of the states so some of these states are weighted more heavily. Like Manipur at the top is affected heavily because there is only one dish in this dataset. but we can see that Karnatka and Punjab are higher in this list in terms of Prep Time. These two states are no where near each other but we can look at the regions.\n\ntime_prepped2 &lt;- india |&gt; \n  filter(region != \"-1\" & prep_time != -1) |&gt; \n  group_by(region) |&gt; \n  summarize(\n    Count = n(),\n    Average = mean(prep_time),\n    Minimum = min(prep_time),\n    Quartile1 = quantile(prep_time, probs = c(.25), type = 1),\n    Median = median(prep_time),\n    Quartile3 = quantile(prep_time, probs = c(.75), type = 1),\n    Maximum = max(prep_time)\n  ) |&gt; \n  arrange(desc(Median))\nknitr::kable(time_prepped2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nregion\nCount\nAverage\nMinimum\nQuartile1\nMedian\nQuartile3\nMaximum\n\n\n\n\nEast\n27\n43.51852\n10\n10\n15\n30\n480\n\n\nNorth\n49\n37.44898\n5\n10\n15\n20\n500\n\n\nCentral\n3\n13.33333\n10\n10\n10\n20\n20\n\n\nNorth East\n13\n28.84615\n5\n10\n10\n15\n240\n\n\nSouth\n56\n57.32143\n5\n10\n10\n30\n495\n\n\nWest\n67\n16.82090\n5\n10\n10\n20\n80\n\n\n\n\n\n\nindia |&gt; \n  filter(region != \"-1\" & prep_time != -1) |&gt; \n  ggplot(aes(x = prep_time, y = region)) +\n  geom_boxplot() + \n  labs(title = \"Prep Time by Region\",\n       x = \"Prep Time\",\n       y = \"Region\") +\n  theme_wsj() +\n  theme(text = element_text(family = \"serif\",\n                            color = \"black\"),\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15),\n        axis.text.y = element_text(size = 12),\n        axis.text.x = element_text(size = 15),\n        plot.title = element_text(hjust = .5, \n                                  size=20)\n        )\n\n\n\n\nWell, this displays that East and North is higher than West and South by a couple of minutes, but we would have to do some further hypothesis testing to see if there is actually a difference. (Will do this later.)\n\ntime_cooked1 &lt;- india |&gt; \n  filter(state != \"-1\" & cook_time != -1) |&gt; \n  group_by(state) |&gt; \n  summarize(\n    Count = n(),\n    Average = mean(cook_time),\n    Minimum = min(cook_time),\n    Quartile1 = quantile(cook_time, probs = c(.25), type = 1),\n    Median = median(cook_time),\n    Quartile3 = quantile(cook_time, probs = c(.75), type = 1),\n    Maximum = max(cook_time)\n  ) |&gt; \n  arrange(desc(Median))\nknitr::kable(time_cooked1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstate\nCount\nAverage\nMinimum\nQuartile1\nMedian\nQuartile3\nMaximum\n\n\n\n\nBihar\n3\n66.66667\n20\n20\n60.0\n120\n120\n\n\nChhattisgarh\n1\n60.00000\n60\n60\n60.0\n60\n60\n\n\nHaryana\n1\n60.00000\n60\n60\n60.0\n60\n60\n\n\nKarnataka\n6\n44.16667\n20\n20\n52.5\n60\n60\n\n\nGoa\n2\n50.00000\n40\n40\n50.0\n60\n60\n\n\nJammu & Kashmir\n1\n50.00000\n50\n50\n50.0\n50\n50\n\n\nOdisha\n6\n44.16667\n20\n30\n47.5\n60\n60\n\n\nManipur\n1\n45.00000\n45\n45\n45.0\n45\n45\n\n\nMadhya Pradesh\n2\n42.50000\n40\n40\n42.5\n45\n45\n\n\nKerala\n7\n33.57143\n5\n20\n40.0\n45\n60\n\n\nUttar Pradesh\n9\n43.33333\n25\n40\n40.0\n50\n60\n\n\nWest Bengal\n22\n40.90909\n20\n30\n37.5\n50\n90\n\n\nNCT of Delhi\n1\n35.00000\n35\n35\n35.0\n35\n35\n\n\nAndhra Pradesh\n10\n37.50000\n15\n25\n30.0\n60\n75\n\n\nAssam\n11\n28.18182\n20\n20\n30.0\n35\n40\n\n\nGujarat\n32\n29.71875\n6\n20\n30.0\n40\n60\n\n\nMaharashtra\n28\n54.82143\n10\n20\n30.0\n40\n720\n\n\nPunjab\n32\n37.34375\n5\n30\n30.0\n40\n120\n\n\nRajasthan\n6\n40.00000\n20\n30\n30.0\n40\n90\n\n\nTelangana\n5\n44.00000\n20\n20\n30.0\n30\n120\n\n\nTamil Nadu\n17\n27.05882\n15\n20\n20.0\n30\n90\n\n\nUttarakhand\n1\n20.00000\n20\n20\n20.0\n20\n20\n\n\nNagaland\n1\n15.00000\n15\n15\n15.0\n15\n15\n\n\n\n\n\n\nindia |&gt; \n  filter(state != \"-1\" & cook_time != -1) |&gt; \n  ggplot(aes(x = cook_time, y = state)) +\n  geom_boxplot() + \n  labs(title = \"Cook Time by Region\",\n       x = \"Cook Time\",\n       y = \"State\") +\n  theme_wsj() +\n  theme(text = element_text(family = \"serif\",\n                            color = \"black\"),\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15),\n        axis.text.y = element_text(size = 8),\n        axis.text.x = element_text(size = 15),\n        plot.title = element_text(hjust = .5, \n                                  size=20)\n        )\n\n\n\n\n\ntime_cooked2 &lt;- india |&gt; \n  filter(region != \"-1\" & cook_time != -1) |&gt; \n  group_by(region) |&gt; \n  summarize(\n    Count = n(),\n    Average = mean(cook_time),\n    Minimum = min(cook_time),\n    Quartile1 = quantile(cook_time, probs = c(.25), type = 1),\n    Median = median(cook_time),\n    Quartile3 = quantile(cook_time, probs = c(.75), type = 1),\n    Maximum = max(cook_time)\n  ) |&gt; \n  arrange(desc(Median))\nknitr::kable(time_cooked2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nregion\nCount\nAverage\nMinimum\nQuartile1\nMedian\nQuartile3\nMaximum\n\n\n\n\nCentral\n3\n48.33333\n40\n40\n45\n60\n60\n\n\nEast\n28\n41.60714\n20\n30\n40\n50\n90\n\n\nNorth\n49\n41.63265\n5\n30\n40\n50\n120\n\n\nNorth East\n13\n28.46154\n15\n20\n30\n35\n45\n\n\nSouth\n56\n36.96429\n5\n20\n30\n45\n120\n\n\nWest\n68\n41.55882\n6\n20\n30\n40\n720\n\n\n\n\n\n\nindia |&gt; \n  filter(region != \"-1\" & cook_time != -1) |&gt; \n  ggplot(aes(x = cook_time, y = region)) +\n  geom_boxplot() + \n  labs(title = \"Cook Time by Region\",\n       x = \"Cook Time\",\n       y = \"Region\") +\n  theme_wsj() +\n  theme(text = element_text(family = \"serif\",\n                            color = \"black\"),\n        axis.title.x = element_text(size = 15),\n        axis.title.y = element_text(size = 15),\n        axis.text.y = element_text(size = 12),\n        axis.text.x = element_text(size = 15),\n        plot.title = element_text(hjust = .5, \n                                  size=20)\n        )\n\n\n\n\nAll of these medians pretty much look the same😭. This would be amazing for hypothesis testing. Good for looking at this for now, we will look into this for further detail in Section 4.\nNow for some questions that I just want answered but aren’t really that fun.\n\n\n6. Which state has the highest amount of vegetarian dishes? What about non-vegetarian dishes.\n\nindia |&gt; \n  filter(diet == \"vegetarian\" & state != \"-1\") |&gt; \n  group_by(state) |&gt; \n  summarize(count = n()) |&gt; \n  hchart(\"pie\", hcaes(x = state, y = count)) |&gt; \n  hc_title(text = \"% of Vegetarian dishes by State\")\n\n\n\n\n\n\nYo highcharter is so much cooler. Might change some of the charts to highcharter. We can see that Gujarat, Punjab, and Maharashtra take the pie of vegetarian dishes. But we have to consider that there are just more of these state’s dishes.\n\nindia |&gt; \n  filter(diet == \"non vegetarian\" & state != \"-1\") |&gt; \n  group_by(state) |&gt; \n  summarize(count = n()) |&gt; \n  hchart(\"pie\", hcaes(x = state, y = count)) |&gt; \n  hc_title(text = \"% of Non Vegetarian dishes by State\")\n\n\n\n\n\n\nThis is a wonderfully bad dataset. But we can see that this distribution is not very accurate because this isn’t a full dataset. But Assam having that many non-veg dishes is surprising compared to many of the south states.\n\n\n7. Which region/state has the highest amount of sweet dishes? What about spicy dishes.\n\nindia |&gt; \n  filter(flavor_profile == \"sweet\" & region != \"-1\") |&gt; \n  group_by(region) |&gt; \n  summarize(count = n()) |&gt; \n  hchart(\"pie\", hcaes(x = region, y = count)) |&gt; \n  hc_title(text = \"% of Sweet dishes by Region\")\n\n\n\n\n\n\nWow, thats a nice split. Each region is about the same. Except for the ones that don’t have that many states in that category.\n\nindia |&gt; \n  filter(flavor_profile == \"sweet\" & state != \"-1\") |&gt; \n  group_by(state) |&gt; \n  summarize(count = n()) |&gt; \n  hchart(\"pie\", hcaes(x = state, y = count)) |&gt; \n  hc_title(text = \"% of Sweet dishes by State\")\n\n\n\n\n\n\nMH and WB take the cake for this. Pretty surprising honestly.\n\nindia |&gt; \n  filter(flavor_profile == \"spicy\" & region != \"-1\") |&gt; \n  group_by(region) |&gt; \n  summarize(count = n()) |&gt; \n  hchart(\"pie\", hcaes(x = region, y = count)) |&gt; \n  hc_title(text = \"% of Spicy dishes by Region\")\n\n\n\n\n\n\nOh East lacking. And West dominates here.\n\nindia |&gt; \n  filter(flavor_profile == \"spicy\" & state != \"-1\") |&gt; \n  group_by(state) |&gt; \n  summarize(count = n()) |&gt; \n  hchart(\"pie\", hcaes(x = state, y = count)) |&gt; \n  hc_title(text = \"% of Spicy dishes by State\")\n\n\n\n\n\n\nWait this lowkey wild. Gujurat and Punjab dominating this much is crazy. But this dataset is so bad😭. Why couldn’t the distribution be better.\n\n\nSection 3b: Andhra Pradesh Details\nI roots are in Andhra Pradhesh and I wanted to see more details about the Andhra dishes on here.\n\nandhra &lt;- india |&gt; \n  filter(state == \"Andhra Pradesh\")\nknitr::kable(andhra)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nname\ningredients\ndiet\nprep_time\ncook_time\nflavor_profile\ncourse\nstate\nregion\n\n\n\n\nAriselu\nRice flour, jaggery, ghee\nvegetarian\n15\n75\nsweet\ndessert\nAndhra Pradesh\nSouth\n\n\nBandar laddu\nBesan, jaggery, cardamom powder, ghee, cashews and raisins, jaggery syrup, sugar\nvegetarian\n5\n35\nsweet\ndessert\nAndhra Pradesh\nSouth\n\n\nGavvalu\nRice flour, sugar, salt, ghee, semolina\nvegetarian\n10\n30\nsweet\ndessert\nAndhra Pradesh\nSouth\n\n\nKakinada khaja\nWheat flour, sugar\nvegetarian\n10\n30\nsweet\ndessert\nAndhra Pradesh\nSouth\n\n\nPalathalikalu\nRice flour, milk\nvegetarian\n10\n25\nsweet\ndessert\nAndhra Pradesh\nSouth\n\n\nPoornalu\nChana dal, jaggery\nvegetarian\n240\n60\nsweet\ndessert\nAndhra Pradesh\nSouth\n\n\nPootharekulu\nRice flour, powdered sugar, ghee\nvegetarian\n10\n60\nsweet\ndessert\nAndhra Pradesh\nSouth\n\n\nKajjikaya\nRice flour, jaggery, coconut\nvegetarian\n40\n15\nsweet\ndessert\nAndhra Pradesh\nSouth\n\n\nAttu\nWhole wheat flour, arhar dal, ginger, kala jeera, green chilli\nvegetarian\n150\n25\nspicy\nsnack\nAndhra Pradesh\nSouth\n\n\nPesarattu\nGreen moong beans, rice flour\nvegetarian\n120\n20\nspicy\nsnack\nAndhra Pradesh\nSouth\n\n\n\n\n\n\n8. What ingredients are most prevalent in Andhra dishes?\n\ningredient_list = c()\nfor (recipe in andhra$ingredients) {\n  ingredients &lt;- strsplit(recipe, \",\")\n  ingredient &lt;- unlist(ingredients)\n  ingredient &lt;- trimws(ingredient)\n  ingredient_list &lt;- c(ingredient_list, ingredient)\n}\nandhra_ingredients &lt;- as_tibble(ingredient_list)\n\n\nandhra_ingredients |&gt; \n  group_by(value) |&gt; \n  summarize(count = n()) |&gt; \n  rename(ingredient = value) |&gt; \n  hchart(\"pie\", hcaes(x = ingredient, y = count)) |&gt; \n  hc_title(text = \"Prevalance of Ingredients in Andhra Dishes\")\n\n\n\n\n\n\nThough all of the dishes listed under Andhra aren’t actually main courses, it is still interesting to see all of the snacks and desserts of Andhra. It is quite interesting to see. Rice Flour and Jaggery are very prevalent amongst these dishes in Andhra, which isn’t very surprising either."
  },
  {
    "objectID": "index.html#section-4-hypothesis-testing",
    "href": "index.html#section-4-hypothesis-testing",
    "title": "Indian Recipes",
    "section": "Section 4: Hypothesis Testing",
    "text": "Section 4: Hypothesis Testing\nOk now that I am done with visualizing my questions with this incomplete dataset (As I kept the visualizations going, I realized how incomplete this dataset is. It is actually really bad for analysis). This dataset can not and will not prove anything because of how unevenly distributed it is. So we need to be mindful about anything that I do here.\n\n1. Do sweet flavor profiles have a greater cook time per minute of prep time compared to the dataset population?\nNull Hypothesis: H0 : \\[\\mu\\] East = \\[\\mu\\]\nAlternative Hypothesis: Ha : \\(\\mu\\) East &gt; \\(\\mu\\)\nSignificance Level: \\(\\alpha\\) = .05\n\nmean_total &lt;- mean(india$prep_time)\nstd_total &lt;- sd(india$prep_time)\nmean_total\n\n[1] 31.10588\n\nstd_total\n\n[1] 72.55441\n\neast &lt;- india |&gt; \n  filter(region == \"East\") \nmean_east &lt;- mean(east$prep_time)\nstd_east &lt;- sd(east$prep_time)\nmean_east\n\n[1] 37.77419\n\nstd_east\n\n[1] 88.09\n\n\n\n\n2. Are the dishes from the East have a longer prep time compared to the dataset population?\n\n\n3. Are the dishes from the East have a longer cook time compared to the dataset population?"
  },
  {
    "objectID": "about.html#about",
    "href": "about.html#about",
    "title": "About",
    "section": "",
    "text": "Hello! My name is Suvan Chatakondu, and I am a student at the University of Illinois at Urbana-Champaign, where I study Statistics and Computer Science."
  },
  {
    "objectID": "about.html#resources",
    "href": "about.html#resources",
    "title": "About",
    "section": "Resources:",
    "text": "Resources:\nLearning R: https://r4ds.hadley.nz/\nThank you to Kane’s Data Science Bootcamp for teaching me the initial ideas and the past students for inspiration\nRStudio Setup: https://www.youtube.com/watch?v=vMNNOwriAbQ\nDataset: https://www.kaggle.com/datasets/nehaprabhavalkar/indian-food-101/data"
  }
]