---
title: "Indian Recipes"
author: "Suvan Chatakondu"
---

## Section 1: Dataset

This is an examination of an Indian Food Dataset containing dishes from various states and regions of India.

I chose this dataset because I am Indian American and love looking at food. I thought it would be interesting to analyze the regions and states of India and how their food differentiates and varies. This was also a really lovely, laid-out dataset with flavor profiles and course types.

I found this dataset by searching food on [Kaggle](https://www.kaggle.com/datasets/nehaprabhavalkar/indian-food-101/datandefined){target="_blank"}. It caught my eye, and I wanted to analyze it. This is the `indian_food.csv` dataset.

```{r imports, include=FALSE}
library(rvest)
library(tidyverse)
library(janitor)
library(readr)
library(dplyr)
library(gt)
library(scales)
library(ggthemes)
library(extrafont)
library(knitr)
library(wesanderson)
library(plotly)
library(insight)
library(highcharter)
library(ggridges)
loadfonts(device = "win")
```

```{r extracode, eval=FALSE, echo=FALSE}
text = element_text(family = "serif",
                            color = "black"),
```

```{r loadingdata}
india <- read.csv("indian_food.csv")
ordered <- india |> 
  arrange(name)
knitr::kable(head(ordered), format="html")
```

The Indian Food dataset we are working with has 225 food entries and 9 columns of characteristics.

Throughout this analysis, we will break down many columns to see similarities and differences between the regions and states.

**Disclaimer**: Food is very various and infinite. This is not a comprehensive list of Indian Food by any means, so we are doing a surface-level analysis. Anything discovered here is taken with a grain of salt because the sample size for everything is not greater than 10% of the population.

## Section 2: Exploratory Data Analysis

Let's examine this data. I want to do this by looking at graphs, which I can use to answer many questions.

#### 1. What is the distribution of dishes from each state? What about each region?

```{r q1a, warning=FALSE, results='hide'}
states <- india |> 
  group_by(state) |> 
  summarize(n = n()) |> 
  mutate(state = ifelse(state == "-1", "Other", 
                        state)
         ) |> 
  arrange(state) |> 
  rename(count = n)
```

```{r}
state_graph <- ggplot(states, 
                      mapping = aes(x=state,
                                    y=count,
                                    fill=state,
                                    text = paste("State: ", state, "\n",
                                                 "Count: ", count, sep=""))) +
  geom_col() +
  labs(title = "Number of Dishes per State in Dataset",
       x = "State",
       y = "Number of Dishes") +
  theme_wsj() +
  theme(
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size = 10, 
                                   family = "serif"),
        axis.text.x = element_text(angle = 80,
                                   size = 10,
                                   hjust = .9,
                                   color = "black",
                                   family = "serif"
                                   ),
        axis.line.x = element_blank(),
        axis.ticks.x = element_blank(),
        plot.title = element_text(hjust = .5, 
                                  size=20),
        legend.position = "none"
        )
```

```{r}
ggplotly(state_graph, tooltip = "text")
```

It is apparent that some states are very overrepresented in this dataset, like Gujurat, Punjab, and Maharashtra. Some states do not have that many dishes in this dataset, like Tripura, Chhattisgarh, and Nagaland. With this knowledge, any analysis that we do that includes the states will not be accurate because not every state is represented equally. But that doesn't stop us from exploring this dataset.

```{r q1b, warning=FALSE, results="hide"}
regions <- india |> 
  group_by(region) |> 
  summarize(n = n()) |> 
  mutate(region = ifelse(region == "-1", "Other", 
                         region
                       )
         ) |> 
  arrange(region) |> 
  rename(count = n)
```

```{r}
region_graph <- ggplot(regions, 
                       mapping = aes(x=region,
                                     y=count,
                                     fill=region,
                                     text = paste("Region: ", region, "\n",
                                                  "Count: ", count, sep=""))) +
  geom_col() +
  labs(title = "Number of Dishes per Region in Dataset",
       x = "Region",
       y = "Number of Dishes") +
  theme_wsj() +
  theme(
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size = 15,
                                   family = "serif"),
        axis.text.x = element_text(angle = 80,
                                   size = 15,
                                   hjust = .5,
                                   color = "black",
                                   family = "serif"
                                   ),
        axis.line.x = element_blank(),
        axis.ticks.x = element_blank(),
        plot.title = element_text(hjust = .5, 
                                  size=20),
        legend.position = "none"
        )
```

```{r}
ggplotly(region_graph, tooltip = "text")
```

This is also not a uniform distribution as West and South dominate North East and Central India. But that will not stop me from looking at this dataset more.

#### 2. How many different Flavor Profiles/Courses are there in this dataset?

```{r q2a, warning=FALSE, results='hide'}
flavor_profiles <- india |> 
  group_by(flavor_profile) |> 
  summarize(n = n()) |> 
  arrange(flavor_profile) |> 
  rename(count = n)
```

```{r}
flavor_profiles_graph <- ggplot(flavor_profiles, 
                                mapping = aes(x=flavor_profile,
                                              y=count,
                                              fill=flavor_profile,
                                              text = paste("Flavor Profile: ", flavor_profile, "\n",
                                                           "Count: ", count, sep=""))) +
  geom_col() +
  labs(title = "Number of Dishes per Flavor Profile in Dataset",
       x = "Flavor Profiles",
       y = "Number of Dishes") +
  theme_wsj() +
  theme(
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size = 15,
                                   family="serif"),
        axis.text.x = element_text(size = 15,
                                   family="serif"),
        plot.title = element_text(hjust = .5, 
                                  size=20),
        legend.position = "none"
        ) + coord_flip() + 
  scale_x_discrete(breaks=c("sweet","spicy","sour", "savory", "bitter"),
                   labels=c("Sweet", "Spicy", "Sour", "Savory", "Bitter"))
```

```{r}
ggplotly(flavor_profiles_graph, tooltip = "text")
```

We can see that there is a lot of Spicy foods listed with Sweet foods following closely. However, we do not have a lot of Sour, Bitter, or Savory foods compared to the other two flavor profiles.

```{r q2b, warning=FALSE, results='hide'}
courses <- india |> 
  group_by(course) |> 
  summarize(n = n()) |> 
  arrange(course) |> 
  rename(count = n)
```

```{r}
courses_graph <- ggplot(courses, 
                        mapping = aes(x=course,
                                      y=count,
                                      fill=course,
                                      text = paste("Course: ", course, "\n",
                                                   "Count: ", count, sep=""))) +
  geom_col() +
  labs(title = "Number of Dishes per Course in Dataset",
       x = "Course",
       y = "Number of Dishes") +
  theme_wsj() +
  theme(
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size = 15,
                                   family = "serif"),
        axis.text.x = element_text(size = 15,
                                   family = "serif"),
        plot.title = element_text(hjust = .5, 
                                  size=20),
        legend.position = "none",
        axis.ticks.y = element_blank()
        ) + coord_flip() + 
  scale_x_discrete(breaks=c("starter","snack","main course", "dessert"),
                   labels=c("Starter", "Snack", "Main Course", "Dessert"))
```

```{r}
ggplotly(courses_graph, tooltip = "text")
```

This is also a pretty uneven split amongst the different Courses. Just keep this as food for though.

#### 3. What percent of the food in this dataset are vegetarian/non-vegetarian?

```{r q3, warning=FALSE, results='hide'}
diets <- india |> 
  group_by(diet) |> 
  summarize(n = n()) |> 
  arrange(diet) |> 
  rename(count = n)
```

```{r message=FALSE}
diets_graph <- ggplot(diets,
                      mapping = aes(x="",
                                    y=diet,
                                    fill=diet)) +
  geom_bar(stat="identity", width=1) +
  coord_polar("y", start=0) +
  theme_void()  +
  labs(
    title = "Number of Dishes that are Veg/Non-Veg in Dataset",
    fill = "Diet"
  ) +
  theme(
    text = element_text(family = "serif",
                            color = "black"),
    plot.title = element_text(size=20, 
                              hjust=.5)
  ) +
  scale_fill_manual(values=c("#fc8d62", "#66c2a5"), name = "Diet", labels = c("Non-Vegetarian", "Vegetarian"))
diets_graph
```

Well this is certainly very un-even. However, if you remember, North and West India dominate this dataset, and those are usually more vegetarian due to religious reasons.

Now that we have examined all five characteristics of this dataset and found that they are not uniformly distributed, all of our further answering and analysis will be contained within this dataset. This will make sense as we proceed with this analysis.

## Section 3: Exploratory Data Visualizations

Now let's answer some more ***interesting*** questions🤭!

#### 4. Does Prep-Time and Cook-Time ratio influence what type of Flavor Profile it creates? What about influencing what Course it creates?

```{r q4ai}
ratio1_graph1 <- india |> 
  ggplot(aes(x=prep_time, 
             y=cook_time, 
             col=flavor_profile, 
             text = paste("Dish: ", name, "\n",
                          "Flavor Profile: ", flavor_profile, "\n",
                          "Prep Time: ", prep_time, " mins\n",
                          "Cook Time: ", cook_time, " mins\n", sep=""))) +
  geom_jitter(width = .5, height = .5) +
  labs(title = "Flavor Profiles wrt Prep & Cook Time",
       x = "Prep Time",
       y = "Cook Time",
       col = "Flavor Profile") +
  theme(text = element_text(family = "serif",
                            color = "black"),
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15), 
        axis.text.y = element_text(size = 15),
        axis.text.x = element_text(size = 15),
        plot.title = element_text(hjust = .5, 
                                  size=20),
        legend.title = element_text(size = 15)
        )
ggplotly(ratio1_graph1, tooltip = "text")
```

Alright. We have some massive outliers here. We can just be satisfied with this graph. Or we can filter out some of the more expansive prep and cook times. Let's do this with some boxplots to decide the boundaries.

```{r q4aii}
ratio1_graph2 <- india |> 
  filter(prep_time >= 0) |> 
  ggplot(aes(x=prep_time)) +
  geom_boxplot() + 
  labs(title = "Prep-Time Boxplot",
       x = "Prep Time") +
  theme_wsj() +
  theme(text = element_text(family = "serif",
                            color = "black"),
        axis.title.x = element_text(size = 15),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_text(size = 15),
        plot.title = element_text(hjust = .5, 
                                  size=20)
        ) +
  ylim(-1, 1)
ratio1_graph2
```

Goodness, there's a lot of outlier in prep-time, lets lock it down to minutes in the data that aren't outliers.

```{r, echo=FALSE}
boxplot_table1 <- layer_data(ratio1_graph2) |> 
  select(xmin:xmax)
knitr::kable(boxplot_table1)
```

Let's do the same for Cook Time.

```{r q4aiii}
ratio1_graph3 <- india |> 
  filter(cook_time >= 0) |> 
  ggplot(aes(x=cook_time)) +
  geom_boxplot() + 
  labs(title = "Cook-Time Boxplot",
       x = "Cook Time") +
  theme_wsj() +
  theme(text = element_text(family = "serif",
                            color = "black"),
        axis.title.x = element_text(size = 15),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_text(size = 15),
        plot.title = element_text(hjust = .5, 
                                  size=20)
        ) +
  ylim(-1, 1)
ratio1_graph3
```

```{r, echo=FALSE}
boxplot_table2 <- layer_data(ratio1_graph3) |> 
  select(xmin:xmax)
knitr::kable(boxplot_table2)
```

Bet. Now we have the numbers. Lets redo the plot!

```{r q4aiv}
ratio1_graph4 <- india |> 
  filter(prep_time >= 0 & prep_time <= 35 & cook_time >= 0 & cook_time <= 75) |> 
  ggplot(aes(x=prep_time, 
             y=cook_time, 
             col=flavor_profile,
             label = name,
             text = paste("Dish: ", name, "\n",
                          "Flavor Profile: ", flavor_profile, "\n",
                          "Prep Time: ", prep_time, " mins\n",
                          "Cook Time: ", cook_time, " mins\n", sep=""))) +
  geom_jitter(width = 0.7, height = 0.7) +
  labs(title = "Flavor Profiles wrt Prep & Cook Time",
       x = "Prep Time",
       y = "Cook Time",
       col = "Flavor Profile") +
  theme(text = element_text(family = "serif",
                            color = "black"),
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15), 
        axis.text.y = element_text(size = 15),
        axis.text.x = element_text(size = 15),
        plot.title = element_text(hjust = .5, 
                                  size=20),
        legend.title = element_text(size = 15)
        )
ggplotly(ratio1_graph4, tooltip = "text")
```

This is an interesting graph. I like it. We can see that Sweet things take a little less to prep and still take a while to cook. Spicy is a little more prep but cooking is about the same as sweets. Savory doesn't take too long to prep or cook from what information we have in this plot. This is good stuff. We should do some mathematical analysis. But we will keep that for section 4. Lets do the same for course.

```{r q4bi}
ratio2_graph1 <- india |> 
  filter(prep_time >= 0 & prep_time <= 35 & cook_time >= 0 & cook_time <= 75) |>
  ggplot(aes(x=prep_time, 
             y=cook_time, 
             col=course, 
             text = paste("Dish: ", name, "\n",
                          "Course: ", course, "\n",
                          "Prep Time: ", prep_time, " mins\n",
                          "Cook Time: ", cook_time, " mins\n", sep=""))) +
  geom_jitter(width = .5, height = .5) +
  labs(title = "Courses wrt Prep & Cook Time",
       x = "Prep Time",
       y = "Cook Time",
       col = "Course") +
  theme(text = element_text(family = "serif",
                            color = "black"),
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15), 
        axis.text.y = element_text(size = 15),
        axis.text.x = element_text(size = 15),
        plot.title = element_text(hjust = .5, 
                                  size=20),
        legend.title = element_text(size = 15)
        )
ggplotly(ratio2_graph1, tooltip = "text")
```

Gosh now I want numbers. These graphs are good, but I need numerical confirmation about the averages. Let's find out some numbers.

```{r q4ci}
ratio_table1 <- india |> 
  filter(prep_time >= 0 & prep_time <= 35 & cook_time >= 0 & cook_time <= 75) |>
  mutate(ratio = cook_time / prep_time) |> 
  group_by(flavor_profile) |> 
  summarize(CookPrepRatio = mean(ratio)) |> 
  arrange(desc(CookPrepRatio)) |> 
  rename(FlavorProfile = flavor_profile)
knitr::kable(ratio_table1)
```

Here we can see that Sweet has more cook time per minute of prep time compared to the others. But to find out if this is significant or not would need to do some hypothesis testing.

```{r q4cii}
ratio_table2 <- india |> 
  filter(prep_time >= 0 & prep_time <= 35 & cook_time >= 0 & cook_time <= 75) |>
  mutate(ratio = cook_time / prep_time) |> 
  group_by(course) |> 
  summarize(CookPrepRatio = mean(ratio)) |> 
  arrange(desc(CookPrepRatio)) |> 
  rename(Course = course)
knitr::kable(ratio_table2)
```

Ok, I thought that desserts would take more time based on the fact that sweets were the highest Cook Prep Time Ratio. So this looks right. We would need to do some hypothesis testing to see how significantly higher the dessert ratio is. (Note: Find mean time for ratio and see if it is statistically significant using hypothesis testing)

#### 5. What are each region's/state's distribution for prep/cook time amongst all of the dishes?

Ooh interesting question indeed. Lets do the same process 😭.

```{r 5a}
time_prepped1 <- india |> 
  filter(state != "-1" & prep_time != -1) |> 
  group_by(state) |> 
  summarize(
    Count = n(),
    Average = mean(prep_time),
    Minimum = min(prep_time),
    Quartile1 = quantile(prep_time, probs = c(.25), type = 1),
    Median = median(prep_time),
    Quartile3 = quantile(prep_time, probs = c(.75), type = 1),
    Maximum = max(prep_time)
  ) |> 
  arrange(desc(Median))
knitr::kable(time_prepped1)
```

```{r 5aii}
india |> 
  filter(state != "-1" & prep_time != -1) |> 
  ggplot(aes(x = prep_time, y = state)) +
  geom_boxplot() + 
  labs(title = "Prep Time by State",
       x = "Prep Time",
       y = "State") +
  theme_wsj() +
  theme(text = element_text(family = "serif",
                            color = "black"),
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size = 8),
        axis.text.x = element_text(size = 15),
        plot.title = element_text(hjust = .5, 
                                  size=20)
        )
```

I ordered this list by the highest median. There are a lot of outliers in this dataset so we have to use the neutral party that isn't affected by outliers is the median. But the sample size isn't the same between all of the states so some of these states are weighted more heavily. Like Manipur at the top is affected heavily because there is only one dish in this dataset. but we can see that Karnatka and Punjab are higher in this list in terms of Prep Time. These two states are no where near each other but we can look at the regions.

```{r 5b}
time_prepped2 <- india |> 
  filter(region != "-1" & prep_time != -1) |> 
  group_by(region) |> 
  summarize(
    Count = n(),
    Average = mean(prep_time),
    Minimum = min(prep_time),
    Quartile1 = quantile(prep_time, probs = c(.25), type = 1),
    Median = median(prep_time),
    Quartile3 = quantile(prep_time, probs = c(.75), type = 1),
    Maximum = max(prep_time)
  ) |> 
  arrange(desc(Median))
knitr::kable(time_prepped2)
```

```{r 5bii}
india |> 
  filter(region != "-1" & prep_time != -1) |> 
  ggplot(aes(x = prep_time, y = region)) +
  geom_boxplot() + 
  labs(title = "Prep Time by Region",
       x = "Prep Time",
       y = "Region") +
  theme_wsj() +
  theme(text = element_text(family = "serif",
                            color = "black"),
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size = 12),
        axis.text.x = element_text(size = 15),
        plot.title = element_text(hjust = .5, 
                                  size=20)
        )
```

Well, this displays that East and North is higher than West and South by a couple of minutes, but we would have to do some further hypothesis testing to see if there is actually a difference. (Will do this later.)

```{r 5c}
time_cooked1 <- india |> 
  filter(state != "-1" & cook_time != -1) |> 
  group_by(state) |> 
  summarize(
    Count = n(),
    Average = mean(cook_time),
    Minimum = min(cook_time),
    Quartile1 = quantile(cook_time, probs = c(.25), type = 1),
    Median = median(cook_time),
    Quartile3 = quantile(cook_time, probs = c(.75), type = 1),
    Maximum = max(cook_time)
  ) |> 
  arrange(desc(Median))
knitr::kable(time_cooked1)
```

```{r 5cii}
india |> 
  filter(state != "-1" & cook_time != -1) |> 
  ggplot(aes(x = cook_time, y = state)) +
  geom_boxplot() + 
  labs(title = "Cook Time by State",
       x = "Cook Time",
       y = "State") +
  theme_wsj() +
  theme(text = element_text(family = "serif",
                            color = "black"),
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size = 8),
        axis.text.x = element_text(size = 15),
        plot.title = element_text(hjust = .5, 
                                  size=20)
        )
```

```{r 5d}
time_cooked2 <- india |> 
  filter(region != "-1" & cook_time != -1) |> 
  group_by(region) |> 
  summarize(
    Count = n(),
    Average = mean(cook_time),
    Minimum = min(cook_time),
    Quartile1 = quantile(cook_time, probs = c(.25), type = 1),
    Median = median(cook_time),
    Quartile3 = quantile(cook_time, probs = c(.75), type = 1),
    Maximum = max(cook_time)
  ) |> 
  arrange(desc(Median))
knitr::kable(time_cooked2)
```

```{r 5dii}
india |> 
  filter(region != "-1" & cook_time != -1) |> 
  ggplot(aes(x = cook_time, y = region)) +
  geom_boxplot() + 
  labs(title = "Cook Time by Region",
       x = "Cook Time",
       y = "Region") +
  theme_wsj() +
  theme(text = element_text(family = "serif",
                            color = "black"),
        axis.title.x = element_text(size = 15),
        axis.title.y = element_text(size = 15),
        axis.text.y = element_text(size = 12),
        axis.text.x = element_text(size = 15),
        plot.title = element_text(hjust = .5, 
                                  size=20)
        )
```

All of these medians pretty much look the same😭. This would be amazing for hypothesis testing. Good for looking at this for now, we will look into this for further detail in Section 4.

Now for some questions that I just want answered but aren't really that fun.

#### 6. Which state has the highest amount of vegetarian dishes? What about non-vegetarian dishes.

```{r 6a}
india |> 
  filter(diet == "vegetarian" & state != "-1") |> 
  group_by(state) |> 
  summarize(count = n()) |> 
  hchart("pie", hcaes(x = state, y = count)) |> 
  hc_title(text = "% of Vegetarian dishes by State")
```

Yo highcharter is so much cooler. Might change some of the charts to highcharter. We can see that Gujarat, Punjab, and Maharashtra take the pie of vegetarian dishes. But we have to consider that there are just more of these state's dishes.

```{r 6b}
india |> 
  filter(diet == "non vegetarian" & state != "-1") |> 
  group_by(state) |> 
  summarize(count = n()) |> 
  hchart("pie", hcaes(x = state, y = count)) |> 
  hc_title(text = "% of Non Vegetarian dishes by State")
```

This is a wonderfully bad dataset. But we can see that this distribution is not very accurate because this isn't a full dataset. But Assam having that many non-veg dishes is surprising compared to many of the south states.

#### 7. Which region/state has the highest amount of sweet dishes? What about spicy dishes.

```{r 7a}
india |> 
  filter(flavor_profile == "sweet" & region != "-1") |> 
  group_by(region) |> 
  summarize(count = n()) |> 
  hchart("pie", hcaes(x = region, y = count)) |> 
  hc_title(text = "% of Sweet dishes by Region")
```

Wow, thats a nice split. Each region is about the same. Except for the ones that don't have that many states in that category.

```{r 7b}
india |> 
  filter(flavor_profile == "sweet" & state != "-1") |> 
  group_by(state) |> 
  summarize(count = n()) |> 
  hchart("pie", hcaes(x = state, y = count)) |> 
  hc_title(text = "% of Sweet dishes by State")
```

MH and WB take the cake for this. Pretty surprising honestly.

```{r 7c}
india |> 
  filter(flavor_profile == "spicy" & region != "-1") |> 
  group_by(region) |> 
  summarize(count = n()) |> 
  hchart("pie", hcaes(x = region, y = count)) |> 
  hc_title(text = "% of Spicy dishes by Region")
```

Oh East lacking. And West dominates here.

```{r 7d}
india |> 
  filter(flavor_profile == "spicy" & state != "-1") |> 
  group_by(state) |> 
  summarize(count = n()) |> 
  hchart("pie", hcaes(x = state, y = count)) |> 
  hc_title(text = "% of Spicy dishes by State")
```

Wait this lowkey wild. Gujurat and Punjab dominating this much is crazy. But this dataset is so bad😭. Why couldn't the distribution be better.

### Section 3b: Andhra Pradesh Details

I roots are in Andhra Pradhesh and I wanted to see more details about the Andhra dishes on here.

```{r}
andhra <- india |> 
  filter(state == "Andhra Pradesh")
knitr::kable(andhra)
```

#### 8. What ingredients are most prevalent in Andhra dishes?

```{r 8cleaning}
ingredient_list = c()
for (recipe in andhra$ingredients) {
  ingredients <- strsplit(recipe, ",")
  ingredient <- unlist(ingredients)
  ingredient <- trimws(ingredient)
  ingredient_list <- c(ingredient_list, ingredient)
}
andhra_ingredients <- as_tibble(ingredient_list)
```

```{r 8}
andhra_ingredients |> 
  group_by(value) |> 
  summarize(count = n()) |> 
  rename(ingredient = value) |> 
  hchart("pie", hcaes(x = ingredient, y = count)) |> 
  hc_title(text = "Prevalance of Ingredients in Andhra Dishes")
```

Though all of the dishes listed under Andhra aren't actually main courses, it is still interesting to see all of the snacks and desserts of Andhra. It is quite interesting to see. Rice Flour and Jaggery are very prevalent amongst these dishes in Andhra, which isn't very surprising either.

## Section 4: Hypothesis Testing

Ok now that I am done with visualizing my questions with this incomplete dataset (As I kept the visualizations going, I realized how incomplete this dataset is. It is actually really bad for analysis). This dataset can not and will not prove anything because of how unevenly distributed it is. So we need to be mindful about anything that I do here.

#### 1. Do sweet flavor profiles have a greater cook time per minute of prep time compared to the spicy flavor profile?

**Null Hypothesis**: H~0~ : $\mu$ ~sweet~ = $\mu$ ~spicy~

**Alternative Hypothesis**: H~0~ : $\mu$ ~sweet~ \> $\mu$ ~spicy~

**Significance Level**: $\alpha$ = .05

```{r}
sweet <- india$cook_time[india$flavor_profile == "sweet"]
spicy <- india$cook_time[india$flavor_profile == "spicy"]
hist(sweet)
hist(spicy)
```

Let's just assume the law of large numbers and see what happens.

```{r}
t.test(sweet, spicy)
```

Though the p-value is low, it is not low enough. We do not have significant evidence that the cook time of sweet dishes is different from the cook time of spicy dishes, thus failing to reject our null hypothesis.

#### 2. Do the dishes from the East have a longer prep time compared to the South?

**Null Hypothesis**: H~0~ : $\mu$ ~East~ = $\mu$ ~South~

**Alternative Hypothesis**: H~a~ : $\mu$ ~East~ \> $\mu$ ~South~

**Significance Level**: $\alpha$ = .05

```{r}
east <- india$prep_time[india$region == "East"]
south <- india$prep_time[india$region == "South"]
hist(east)
hist(south)
```

This is not a normal distribution for either the south or the east but we will use the law of large numbers anyway.

```{r}
t.test(east, south)
```

So as we can see from this output, we fail to reject the statement that the average amount of prep time for the east is equal to the amount of prep time for the south.

#### 3. Are the dishes from the East have a longer cook time compared to the South?

```{r}
east <- india$cook_time[india$region == "East"]
south <- india$cook_time[india$region == "South"]
hist(east)
hist(south)
```

```{r}
t.test(east, south)
```

Due to the p-value being greater than the alpha = .05, we do not sufficient eveidence to reject the null hypothesis. Thus we fail to reject the hypothesis that the average amount of cook time for the east is equal to the amount of cook time for the south.

## Section 5: Conclusion

I had fun doing this. I learned so much. This is a little sarcastic, but if this was a better dataset that was more filled up. But I liked learning how to build a site using Quarto. I remember a lot more R now and this was so fun to learn. Highcharter and GGplot are so cool. If they were more intuitive it would've been awesomer. But whatever.
